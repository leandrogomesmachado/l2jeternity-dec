package l2e.gameserver.model.stats;

import java.util.NoSuchElementException;

public enum Stats {
   MAX_HP("maxHp"),
   MAX_MP("maxMp"),
   MAX_CP("maxCp"),
   MAX_RECOVERABLE_HP("maxRecoverableHp"),
   MAX_RECOVERABLE_MP("maxRecoverableMp"),
   MAX_RECOVERABLE_CP("maxRecoverableCp"),
   REGENERATE_HP_RATE("regHp"),
   REGENERATE_CP_RATE("regCp"),
   REGENERATE_MP_RATE("regMp"),
   RECHARGE_MP_RATE("gainMp"),
   MANA_CHARGE("manaCharge"),
   HEAL_EFFECT("healEffect"),
   POWER_DEFENCE("pDef"),
   MAGIC_DEFENCE("mDef"),
   POWER_ATTACK("pAtk"),
   MAGIC_ATTACK("mAtk"),
   MAGIC_SKILL_POWER("magicSkillPower"),
   PHYSICAL_SKILL_POWER("physicalSkillPower"),
   POWER_ATTACK_SPEED("pAtkSpd"),
   MAGIC_ATTACK_SPEED("mAtkSpd"),
   ATK_REUSE("atkReuse"),
   P_REUSE("pReuse"),
   MAGIC_REUSE_RATE("mReuse"),
   SHIELD_DEFENCE("sDef"),
   CRITICAL_DAMAGE("cAtk"),
   CRITICAL_DAMAGE_ADD("cAtkAdd"),
   MAGIC_CRIT_DMG("mCritPower"),
   PVP_PHYSICAL_DMG("pvpPhysDmg"),
   PVP_MAGICAL_DMG("pvpMagicalDmg"),
   PVP_PHYS_SKILL_DMG("pvpPhysSkillsDmg"),
   PVP_PHYSICAL_DEF("pvpPhysDef"),
   PVP_MAGICAL_DEF("pvpMagicalDef"),
   PVP_PHYS_SKILL_DEF("pvpPhysSkillsDef"),
   PVE_PHYSICAL_DMG("pvePhysDmg"),
   PVE_PHYS_SKILL_DMG("pvePhysSkillsDmg"),
   PVE_BOW_DMG("pveBowDmg"),
   PVE_BOW_SKILL_DMG("pveBowSkillsDmg"),
   PVE_MAGICAL_DMG("pveMagicalDmg"),
   EVASION_RATE("rEvas"),
   P_SKILL_EVASION("pSkillEvas"),
   CRIT_DAMAGE_EVASION("critDamEvas"),
   SHIELD_RATE("rShld"),
   CRITICAL_RATE("rCrit"),
   BLOW_RATE("blowRate"),
   LETHAL_RATE("lethalRate"),
   MCRITICAL_RATE("mCritRate"),
   ATTACK_CANCEL("cancel"),
   MAGIC_FAILURE_RATE("magicFailureRate"),
   ACCURACY_COMBAT("accCombat"),
   POWER_ATTACK_RANGE("pAtkRange"),
   MAGIC_ATTACK_RANGE("mAtkRange"),
   POWER_ATTACK_ANGLE("pAtkAngle"),
   ATTACK_COUNT_MAX("atkCountMax"),
   MOVE_SPEED("runSpd"),
   STAT_STR("STR"),
   STAT_CON("CON"),
   STAT_DEX("DEX"),
   STAT_INT("INT"),
   STAT_WIT("WIT"),
   STAT_MEN("MEN"),
   BREATH("breath"),
   FALL("fall"),
   AGGRESSION("aggression"),
   BLEED_VULN("bleedVuln"),
   POISON_VULN("poisonVuln"),
   STUN_VULN("stunVuln"),
   PARALYZE_VULN("paralyzeVuln"),
   ROOT_VULN("rootVuln"),
   SLEEP_VULN("sleepVuln"),
   PHYSICALBLOCKADE_VULN("physicalBlockadeVuln"),
   BOSS_VULN("bossVuln"),
   GUST_VULN("gustVuln"),
   DAMAGE_ZONE_VULN("damageZoneVuln"),
   MOVEMENT_VULN("movementVuln"),
   CANCEL_VULN("cancelVuln"),
   DERANGEMENT_VULN("derangementVuln"),
   DEBUFF_VULN("debuffVuln"),
   BUFF_VULN("buffVuln"),
   CRIT_VULN("critVuln"),
   CRIT_ADD_VULN("critAddVuln"),
   MAGIC_DAMAGE_VULN("magicDamVul"),
   VALAKAS_VULN("valakasVuln"),
   FIRE_RES("fireRes"),
   WIND_RES("windRes"),
   WATER_RES("waterRes"),
   EARTH_RES("earthRes"),
   HOLY_RES("holyRes"),
   DARK_RES("darkRes"),
   MAGIC_SUCCESS_RES("magicSuccRes"),
   DEBUFF_IMMUNITY("debuffImmunity"),
   FIRE_POWER("firePower"),
   WATER_POWER("waterPower"),
   WIND_POWER("windPower"),
   EARTH_POWER("earthPower"),
   HOLY_POWER("holyPower"),
   DARK_POWER("darkPower"),
   BLEED_PROF("bleedProf"),
   POISON_PROF("poisonProf"),
   STUN_PROF("stunProf"),
   PARALYZE_PROF("paralyzeProf"),
   ROOT_PROF("rootProf"),
   SLEEP_PROF("sleepProf"),
   PROF("movementProf"),
   CANCEL_PROF("cancelProf"),
   DERANGEMENT_PROF("derangementProf"),
   DEBUFF_PROF("debuffProf"),
   VALAKAS_PROF("valakasProf"),
   SWORD_WPN_VULN("swordWpnVuln"),
   BLUNT_WPN_VULN("bluntWpnVuln"),
   DAGGER_WPN_VULN("daggerWpnVuln"),
   BOW_WPN_VULN("bowWpnVuln"),
   CROSSBOW_WPN_VULN("crossbowWpnVuln"),
   POLE_WPN_VULN("poleWpnVuln"),
   ETC_WPN_VULN("etcWpnVuln"),
   FIST_WPN_VULN("fistWpnVuln"),
   DUAL_WPN_VULN("dualWpnVuln"),
   DUALFIST_WPN_VULN("dualFistWpnVuln"),
   BIGSWORD_WPN_VULN("bigSwordWpnVuln"),
   BIGBLUNT_WPN_VULN("bigBluntWpnVuln"),
   DUALDAGGER_WPN_VULN("dualDaggerWpnVuln"),
   RAPIER_WPN_VULN("rapierWpnVuln"),
   ANCIENT_WPN_VULN("ancientWpnVuln"),
   PET_WPN_VULN("petWpnVuln"),
   REFLECT_DAMAGE_PERCENT("reflectDam"),
   REFLECT_SKILL_MAGIC("reflectSkillMagic"),
   REFLECT_SKILL_PHYSIC("reflectSkillPhysic"),
   VENGEANCE_SKILL_MAGIC_DAMAGE("vengeanceMdam"),
   VENGEANCE_SKILL_PHYSICAL_DAMAGE("vengeancePdam"),
   ABSORB_DAMAGE_PERCENT("absorbDam"),
   TRANSFER_DAMAGE_PERCENT("transDam"),
   MANA_SHIELD_PERCENT("manaShield"),
   TRANSFER_DAMAGE_TO_PLAYER("transDamToPlayer"),
   ABSORB_MANA_DAMAGE_PERCENT("absorbDamMana"),
   WEIGHT_LIMIT("weightLimit"),
   WEIGHT_PENALTY("weightPenalty"),
   PATK_PLANTS("pAtk-plants"),
   PATK_INSECTS("pAtk-insects"),
   PATK_ANIMALS("pAtk-animals"),
   PATK_MONSTERS("pAtk-monsters"),
   PATK_DRAGONS("pAtk-dragons"),
   PATK_GIANTS("pAtk-giants"),
   PATK_MCREATURES("pAtk-magicCreature"),
   PDEF_PLANTS("pDef-plants"),
   PDEF_INSECTS("pDef-insects"),
   PDEF_ANIMALS("pDef-animals"),
   PDEF_MONSTERS("pDef-monsters"),
   PDEF_DRAGONS("pDef-dragons"),
   PDEF_GIANTS("pDef-giants"),
   PDEF_MCREATURES("pDef-magicCreature"),
   INV_LIM("inventoryLimit"),
   WH_LIM("whLimit"),
   FREIGHT_LIM("FreightLimit"),
   P_SELL_LIM("PrivateSellLimit"),
   P_BUY_LIM("PrivateBuyLimit"),
   REC_D_LIM("DwarfRecipeLimit"),
   REC_C_LIM("CommonRecipeLimit"),
   PHYSICAL_MP_CONSUME_RATE("PhysicalMpConsumeRate"),
   MAGICAL_MP_CONSUME_RATE("MagicalMpConsumeRate"),
   DANCE_MP_CONSUME_RATE("DanceMpConsumeRate"),
   BOW_MP_CONSUME_RATE("BowMpConsumeRate"),
   MP_CONSUME("MpConsume"),
   TALISMAN_SLOTS("talisman"),
   CLOAK_SLOT("cloak"),
   SHIELD_DEFENCE_ANGLE("shieldDefAngle"),
   BONUS_EXP("bonusExp"),
   BONUS_SP("bonusSp"),
   RUNE_OF_EXP("rRExp"),
   RUNE_OF_SP("rRSp"),
   GRADE_EXPERTISE_LEVEL("gradeExpertiseLevel"),
   EXPSP_RATE("rExp"),
   ADENA_MULTIPLIER("adenaMultiplier"),
   SPOIL_MULTIPLIER("spoilMultiplier"),
   REWARD_MULTIPLIER("dropMultiplier"),
   ATTRIBUTE_MULTIPLIER("attributeMultiplier"),
   SKILL_MASTERY("skillMastery"),
   VITALITY_CONSUME_RATE("vitalityConsumeRate"),
   MAX_SOULS("maxSouls"),
   HERO_STATUS("heroAura"),
   DRAIN_PERCENT("drainPercent"),
   CHAT_STATUS("customChat"),
   REDUCE_EXP_LOST_BY_PVP("reduceExpLostByPvp"),
   REDUCE_EXP_LOST_BY_MOB("reduceExpLostByMob"),
   REDUCE_EXP_LOST_BY_RAID("reduceExpLostByRaid"),
   REDUCE_DEATH_PENALTY_BY_PVP("reduceDeathPenaltyByPvp"),
   REDUCE_DEATH_PENALTY_BY_MOB("reduceDeathPenaltyByMob"),
   REDUCE_DEATH_PENALTY_BY_RAID("reduceDeathPenaltyByRaid");

   public static final int NUM_STATS = values().length;
   private String _value;

   public String getValue() {
      return this._value;
   }

   private Stats(String s) {
      this._value = s;
   }

   public static Stats valueOfXml(String name) {
      name = name.intern();

      for(Stats s : values()) {
         if (s.getValue().equals(name)) {
            return s;
         }
      }

      throw new NoSuchElementException("Unknown name '" + name + "' for enum BaseStats");
   }
}
